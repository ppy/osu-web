/**
 *    Copyright 2015-2017 ppy Pty. Ltd.
 *
 *    This file is part of osu!web. osu!web is distributed with the hope of
 *    attracting more community contributions to the core ecosystem of osu!.
 *
 *    osu!web is free software: you can redistribute it and/or modify
 *    it under the terms of the Affero GNU General Public License version 3
 *    as published by the Free Software Foundation.
 *
 *    osu!web is distributed WITHOUT ANY WARRANTY; without even the implied
 *    warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *    See the GNU Affero General Public License for more details.
 *
 *    You should have received a copy of the GNU Affero General Public License
 *    along with osu!web.  If not, see <http://www.gnu.org/licenses/>.
 */

@import "app";

// Generate a circle of any width.
.circle(@diameter) {
  border-radius: 50%;
  width: @diameter;
  height: @diameter;
}

.fade-element(@duration, @type: ease-in-out, @target: all) {
  transition: @target @duration @type;
}

.default-border-radius() {
  border-radius: @border-radius-base;
}

.default-box-shadow() {
  box-shadow+: 0 1px @box-shadow-radius @box-shadow-color;
}

.default-bar-transition(@property: width, @duration: 0.25s, @function: cubic-bezier(0.645, 0.045, 0.355, 1)) {
  transition: @property @duration @function;
}

.default-header-overlay() {
  &::before {
    .full-size();
    content: ' ';
    background-image: linear-gradient(fade(#000, 30%), fade(#000, 80%));
  }
}

.inner-shadow-top() {
  box-shadow+: inset 0 (@box-shadow-radius - 1px) @box-shadow-radius -1px @box-shadow-color;
}

.inset-box-shadow() {
  box-shadow: inset 0 1px 3px fade(#000, 30%);
}

.link-default() {
  color: @link-color;

  .link-hover({
    color: @link-hover-color;
  });
}

.link-gray-dark() {
  color: #555;

  .link-hover({
    color: #777;
  });
}

.link-gray-light() {
  color: @link-gray-light;

  .link-hover({
    color: @link-gray-light-hover;
  });
}

.link-gray-555() {
  color: #555;

  .link-hover({
    color: #555;
  });
}

.link-hover(@rules) {
  &:hover,
  &:focus,
  &:active {
    @rules();
  }
}

.link-pink() {
  color: @pink;

  .link-hover({
    color: @pink-text;
  });
}

.link-pink-dark() {
  color: @pink-dark;

  .link-hover({
    color: @pink-light;
  });
}

.link-pink-light() {
  color: @pink-light;

  .link-hover({
    color: @pink-lighter;
  });
}

.link-plain() {
  text-decoration: none;

  .link-hover({
    text-decoration: none;
  });
}

.link-white() {
  color: #fff;

  .link-hover({
    color: #fff;
  });
}

.link-yellow() {
  color: @yellow;

  .link-hover({
    color: @yellow-light;
  });
}

.thick-box-shadow() {
  box-shadow: 0 2px 10px fade(#000, 30%);
}

.thicker-box-shadow() {
  box-shadow: 0 10px 20px fade(#000, 25%);
}

.default-text-shadow() {
  text-shadow: 0 1px 3px fade(#000, 75%);
}

.thick-text-shadow() {
  text-shadow: 0 2px 4px fade(#000, 75%);
}

.default-line() {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  padding: 0;
}

.center-content() {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

.at2x-simple(@url) {
  @url2x: replace(@url, "(\.[^.]+)$", "@2x$1");
  background-image: url(@url);

  @media @highdpi {
    background-image: url(@url2x);
  }
}

// Will force the element to be rendered in its own layer
// in hardware accelerated mode.
// Be careful that elements using this will have z-index context applied.
.own-layer() {
  transform: translateZ(0);
}

.full-size() {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
}

.btn-bg() {
  background-image: url("/images/backgrounds/button.svg");
  background-size: 200px;
  background-position: 50% 50%;
}

.icon-bg() {
  .btn-bg();
  background-size: cover;
}

.reset-input() {
  outline: none;
  border: none;
  padding: 0;
  margin: 0;
  background: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.content-font() {
  font-family: 'Noto Sans', sans-serif;
  line-height: 1.35;
  color: #444;
}
